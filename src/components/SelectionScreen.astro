---
import { css } from '@styles/css';
import Avatar from './Avatar.astro';

export interface SelectionOption {
  id: string;
  title: string;
  description: string;
  backgroundImage: string;
  href: string;
}

interface Props {
  options: SelectionOption[];
}

const { options } = Astro.props;

const cardContainer = css({
  position: 'relative',
  cursor: 'pointer',
  opacity: 0,
  transform: 'translateY(20px)',
  animation: 'fadeInUp 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards',
  transitionProperty: 'transform, box-shadow',
  transitionDuration: '300ms',
  transitionTimingFunction: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
  _hover: {
    transform: 'translateY(-8px) scale(1.02)',
    boxShadow: '0 20px 40px rgba(0,0,0,0.15)',
    '& [data-avatar-container]': {
      opacity: 1,
      transform: 'translate(-50%, -50%)'
    },
    '& .bg-image': {
      opacity: 0.7,
      transform: 'scale(1.05)'
    }
  }
});

const avatarContainer = css({
  position: 'relative',
  zIndex: 1,
  opacity: 0,
  transitionProperty: 'opacity, transform',
  transitionDuration: '500ms',
  transitionTimingFunction: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
  pointerEvents: 'none'
});
---

<div class={css({
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  justifyContent: 'center',
  minHeight: '100vh',
  padding: '2rem',
  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
  fontFamily: 'system-ui, -apple-system, sans-serif',
  overflow: 'hidden'
})}>
  <h1 class={css({
    fontSize: '3xl',
    fontWeight: 'bold',
    marginBottom: '1rem',
    color: 'white',
    textShadow: '0 2px 4px rgba(0,0,0,0.3)'
  })}>
    自己紹介を見る
  </h1>
  
  <p class={css({
    fontSize: 'lg',
    color: 'rgba(255,255,255,0.9)',
    marginBottom: '3rem',
    textAlign: 'center'
  })}>
    あなたの興味のある分野を選択してください(開発中なのでほぼモック)
  </p>

  <div 
    class={css({
      display: 'flex',
      flexWrap: 'wrap',
      justifyContent: 'center',
      gap: '2rem',
      width: '100%',
      maxWidth: '4xl',
      position: 'relative'
    })}
  >
    {options.map((option, index) => (
      <div
        class={`group ${cardContainer}`}
        style={`animation-delay: ${index * 150}ms`}
        transition:name={`card-${option.id}`}
      >
        <!-- アバターコンテナ（背景に配置） -->
        <div class={avatarContainer} data-avatar-container transition:name={`avatar-${option.id}`}>
          <Avatar 
            type={option.id as 'vrc' | 'engineer' | 'aircraft'}
            position={
              option.id === 'vrc' ? 'top-left' :
              option.id === 'engineer' ? 'middle-center' :
              option.id === 'aircraft' ? 'middle-right' :
              'middle-center'
            }
            size={
              option.id === 'vrc' ? 'md' :
              option.id === 'engineer' ? 'lg' :
              option.id === 'aircraft' ? 'lg' :
              'md'
            }
          />
        </div>
        
        <!-- 選択ボタン（コンパクトサイズ） -->
        <a
          href={option.href}
          class={css({
            display: 'block',
            width: '280px',
            height: '180px',
            padding: '1.5rem',
            backgroundColor: 'rgba(255,255,255,0.1)',
            backdropFilter: 'blur(10px)',
            borderRadius: '24px',
            border: '1px solid rgba(255,255,255,0.2)',
            textDecoration: 'none',
            position: 'relative',
            overflow: 'hidden',
            zIndex: 10,
            transitionProperty: 'background-color, transform, box-shadow',
            transitionDuration: '300ms',
            transitionTimingFunction: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
            _hover: {
              backgroundColor: 'rgba(255,255,255,0.15)',
              transform: 'scale(1.02)',
              boxShadow: '0 10px 30px rgba(0,0,0,0.1)'
            }
          })}
          transition:name={`button-${option.id}`}
        >
          <div class={`bg-image ${css({
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            backgroundSize: 'cover',
            backgroundPosition: 'center',
            borderRadius: '24px',
            opacity: 0,
            zIndex: -1,
            transitionProperty: 'opacity, transform',
            transitionDuration: '300ms',
            transitionTimingFunction: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
          })}`} style={`background-image: url(${option.backgroundImage})`}></div>
          
          <h2 class={css({
            fontSize: 'xl',
            fontWeight: 'bold',
            marginBottom: '0.5rem',
            color: 'white',
            textAlign: 'center',
            textShadow: '0 2px 4px rgba(0,0,0,0.5)',
            transitionProperty: 'transform, text-shadow',
            transitionDuration: '300ms',
            transitionTimingFunction: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
          })}>
            {option.title}
          </h2>
          
          <p class={css({
            color: 'rgba(255,255,255,0.9)',
            textAlign: 'center',
            textShadow: '0 1px 2px rgba(0,0,0,0.5)',
            fontSize: 'sm',
            transitionProperty: 'color, text-shadow',
            transitionDuration: '300ms',
            transitionTimingFunction: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
          })}>
            {option.description}
          </p>
        </a>
      </div>
    ))}
  </div>


</div>
