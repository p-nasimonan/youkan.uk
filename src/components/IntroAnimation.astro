---
// IntroAnimation.astro - Â∞éÂÖ•„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
import { css } from '@styles/css';
import SelectionScreen from './SelectionScreen.astro';

export interface SelectionOption {
  id: string;
  title: string;
  description: string;
  backgroundImage: string;
  href: string;
}

interface Props {
  options: SelectionOption[];
}

const { options } = Astro.props;

// „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Ë¶ÅÁ¥†„ÅÆ„Çπ„Çø„Ç§„É´
const introContainer = css({
  position: 'fixed',
  top: 0,
  left: 0,
  width: '100vw',
  height: '100vh',
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  justifyContent: 'center',
  background: '#667eea',
  zIndex: 1000,
  opacity: 1,
  transition: 'opacity 0.6s ease-out'
});


const itemContainer = css({
  position: 'relative',
  width: '400px',
  height: '300px',
  margin: '0 auto'
});

// ‰∏≠ÂøÉ„Åã„ÇâÈ£õ„Å≥Âá∫„Åô„Ç¢„Ç§„ÉÜ„É†„ÅÆ„Çπ„Çø„Ç§„É´  
const floatingItem = css({
  position: 'absolute',
  fontSize: '5rem',
  opacity: 0,
  transform: 'scale(0) translate(-50%, -50%)',
  left: '50%',
  top: '50%',
  transformOrigin: 'center',
  filter: 'drop-shadow(0 4px 12px rgba(0,0,0,0.3))',
  cursor: 'pointer',
  transition: 'transform 0.3s ease',
  
  '&.avatar': {
    animation: 'popOut 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.2s forwards, floatGentle 2s ease-in-out 1s infinite'
  },
  '&.tea': {
    animation: 'popOut 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.4s forwards, floatGentle 2s ease-in-out 1.2s infinite'
  },
  '&.youkan': {
    animation: 'popOut 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.6s forwards, floatGentle 2s ease-in-out 1.4s infinite'
  },
  
  _hover: {
    transform: 'scale(1.05) translate(-50%, -50%)'
  }
});

const skipButton = css({
  position: 'fixed',
  bottom: '2rem',
  right: '2rem',
  padding: '0.5rem 1rem',
  backgroundColor: 'rgba(255,255,255,0.1)',
  backdropFilter: 'blur(10px)',
  border: '1px solid rgba(255,255,255,0.2)',
  borderRadius: '999px',
  color: 'white',
  fontSize: 'xs',
  fontWeight: 'medium',
  cursor: 'pointer',
  opacity: 0,
  animation: 'fastFadeIn 0.3s ease-out 0.5s forwards',
  transition: 'all 0.2s ease',
  
  _hover: {
    backgroundColor: 'rgba(255,255,255,0.2)',
    transform: 'scale(1.05)'
  },
  
  _dark: {
    backgroundColor: 'rgba(255,255,255,0.08)',
    border: '1px solid rgba(255,255,255,0.1)',
    _hover: {
      backgroundColor: 'rgba(255,255,255,0.15)'
    }
  }
});
---

<div id="intro-animation" class={introContainer}>
  <div class={itemContainer}>
    <!-- „Ç¢„Éê„Çø„Éº -->
    <div class={`${floatingItem} avatar`} style="left: 25%; top: 35%;">
      üë§
    </div>
    
    <!-- Á¥ÖËå∂ -->
    <div class={`${floatingItem} tea`} style="left: 75%; top: 35%;">
      ü´ñ
    </div>
    
    <!-- „Çà„ÅÜ„Åã„Çì -->
    <div class={`${floatingItem} youkan`} style="left: 50%; top: 65%;">
      üç†
    </div>
  </div>
  
  <button id="skip-intro" class={skipButton}>
    „Çπ„Ç≠„ÉÉ„Éó
  </button>
</div>

<!-- „É°„Ç§„É≥„ÅÆÈÅ∏ÊäûÁîªÈù¢ÔºàÂàùÊúü„ÅØÈùûË°®Á§∫Ôºâ -->
<div id="selection-screen" style="opacity: 0; transform: translateY(30px); transition: opacity 0.6s ease-out, transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);">
  <SelectionScreen options={options} />
</div>

<script>
  class IntroAnimationController {
    private introElement: HTMLElement;
    private selectionElement: HTMLElement;
    private skipButton: HTMLElement;
    private animationStarted = false;
    private hasShownIntro = false;

    constructor() {
      this.introElement = document.getElementById('intro-animation')!;
      this.selectionElement = document.getElementById('selection-screen')!;
      this.skipButton = document.getElementById('skip-intro')!;
      
      this.init();
    }

    private init() {
      // „Çª„ÉÉ„Ç∑„Éß„É≥„Çπ„Éà„É¨„Éº„Ç∏„Åß„Ç§„É≥„Éà„É≠Ë°®Á§∫Áä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ
      this.hasShownIntro = sessionStorage.getItem('intro-shown') === 'true';
      
      if (this.hasShownIntro) {
        // Êó¢„Å´Ë°®Á§∫Ê∏à„Åø„ÅÆÂ†¥Âêà„ÅØÂç≥Â∫ß„Å´„É°„Ç§„É≥ÁîªÈù¢„ÇíË°®Á§∫
        this.showMainScreen();
        return;
      }
      
      // ÂàùÂõû„Ç¢„ÇØ„Çª„ÇπÊôÇ„ÅÆ„Åø„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇíÂÆüË°å
      sessionStorage.setItem('intro-shown', 'true');
      
      // „Çπ„Ç≠„ÉÉ„Éó„Éú„Çø„É≥„ÅÆ„Ç§„Éô„É≥„Éà
      this.skipButton.addEventListener('click', () => this.skipIntro());
      
      // Ëá™ÂãïÁöÑ„Å´„É°„Ç§„É≥ÁîªÈù¢„Å´ÈÅ∑ÁßªÔºà2ÁßíÂæåÔºâ
      setTimeout(() => {
        if (!this.animationStarted) {
          this.showMainScreen();
        }
      }, 2000);
    }

    private skipIntro() {
      this.showMainScreen();
    }

    private showMainScreen() {
      this.animationStarted = true;
      
      if (this.hasShownIntro) {
        // 2ÂõûÁõÆ‰ª•ÈôçÔºöÂç≥Â∫ß„Å´Ë°®Á§∫
        this.introElement.style.display = 'none';
        this.selectionElement.style.opacity = '1';
        this.selectionElement.style.transform = 'translateY(0)';
      } else {
        // ÂàùÂõûÔºö„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥‰ªò„Åç„ÅßÈÅ∑Áßª
        this.introElement.style.opacity = '0';
        this.introElement.style.transform = 'scale(0.95)';
        
        // ÈÅ∏ÊäûÁîªÈù¢„Çí„Çπ„É†„Éº„Ç∫„Å´„Éï„Çß„Éº„Éâ„Ç§„É≥
        setTimeout(() => {
          this.selectionElement.style.opacity = '1';
          this.selectionElement.style.transform = 'translateY(0)';
        }, 200);
        
        // Â∞éÂÖ•Ë¶ÅÁ¥†„ÇíÂÆåÂÖ®„Å´ÂâäÈô§
        setTimeout(() => {
          this.introElement.style.display = 'none';
        }, 600);
      }
    }
  }

  // DOM„ÅåË™≠„ÅøËæº„Åæ„Çå„Åü„ÇâÂàùÊúüÂåñ
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new IntroAnimationController());
  } else {
    new IntroAnimationController();
  }

  // View Transitions APIÂØæÂøú
  document.addEventListener('astro:page-load', () => {
    new IntroAnimationController();
  });
</script>

<style>
  /* „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú */
  @media (max-width: 768px) {
    .floating-item {
      font-size: 4rem;
    }
    
    .item-container {
      width: 300px;
      height: 250px;
    }
  }
</style>